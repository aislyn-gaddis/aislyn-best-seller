{"title":"Combined Print and E-Book Fiction Analysis","markdown":{"yaml":{"title":"Combined Print and E-Book Fiction Analysis"},"headingText":"Goals of the notebook","containsRefs":false,"markdown":"\n\n\nHere's what I'll find in this notebook\n\n- I'll make a searchable table\n- What authors have had the most appearances on the list?\n- What author has had the most appearances this year? last 2 years? 5 years? 10 years?\n- What authors have had the most No. 1 appearances? \n- What author has had the most No. 1 appearances this year? last 2 years? 5 years? 10 years?\n- What authors have had the most books on the list?\n- What author has had the most books on the the list this year? last 2 years? 5 years? 10 years?\n- What books have been on the list for the most number of weeks?\n- What books were No. 1 for the most number of weeks?\n- How did movie adaptations affect the charts?\n- What authors have had the most No. 1 books? \n- What author has had the most No. 1 books in the last 5 years? 10 years?\n\n## Setup\n\nI'll load the necessary libraries. \n\n```{r setup}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(DT)\n```\n\n## Import\n\nI'll import the data into the notebook by saving the file into a new object\n\n```{r import}\nbestsellers <- read_rds(\"data-processed/bestsellers-combined.rds\") # saving the data into a new object\n\nglimpse(bestsellers) # glimpsing the data\n```\n\n## Making a searchable table\n\nI'll make a searchable table to look for certain authors and books.\n\n```{r search-table}\nbestsellers |> \n  datatable()\n```\n\n\n## What authors have had the most appearances on the list?\n\nI'll use gsa to find what authors have had the most appearances on the list.\n\nColleen Hoover blows everyone else out of the water with 415 total appearances. John Grisham comes in ssecond with 339, and David Baldacci comes in third with 240.\n\n```{r most-appearances}\nbestsellers_appearances <- bestsellers |> # saving the data into a new object\n  group_by(author) |> # group by author\n  summarize(total_appearances = n()) |> # count appearances\n  arrange(desc(total_appearances)) # arrange in descending order by total_appearances\n\nbestsellers_appearances |> # start with the data\n   filter(total_appearances > 145) |> # only include rows with total_appearances over 145\n  write_csv(\"data-processed/most-appearances.csv\") |> # save the data for data wrapper\n  print() # print it\n```\n\n## What author has had the most appearances this year? last 2 years? 5 years? 10 years?\n\nFirst, I'll find which authors have had the most appearances this year.\n\nAgain, Colleen Hoover blows everyone else out of the water with more than triple 2nd place. She has 160 appearances to be exact.\n\n```{r most-appearances-this-year}\nbestsellers |> # start with the data\n  filter(year > 2022) |> # only include rows with a year over 2022\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 14) # only include appearances above 14\n```\n\nI'll look at the past two years.\n\nColleen Hoover again. More than triple second place with 367.\n\n```{r most-appearances-two-year}\nbestsellers |> # start with the data\n  filter(year > 2021) |> # only include rows with a year over 2021\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 22) # only include appearances above 22\n```\n\nI'll look at the past five years.\n\nColleen Hoover again, still with a large lead, but somewhat less than in the previous ones. She has 394.\n\n```{r most-appearances-five-year}\nbestsellers |> # start with the data\n  filter(year > 2018) |> # only include rows with a year over 2018\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 55) # only include appearances above 55\n```\n\nI'll look at 10 years.\n\nThis is crazy to me that Colleen Hoover still has the lead despite only becoming popular a few years ago. Note that she only has 6 appearances 2013-2017 and still takes the lead. She has 401 total appearances at this point.\n\n```{r most-appearances-ten-year}\nbestsellers |> # start with the data\n  filter(year > 2013) |> # only include rows with a year over 2013\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 105) # only include appearances above 105\n```\n\n## What authors have had the most No. 1 appearances?\n\nIt's John Grisham with 47, though Delia Owens comes close with 44. Colleen Hoover takes third with 33.\n\n```{r most-one-appearances}\nbestsellers |> # start with the data\n  filter(rank == 1) |> # only include rows with a rank of 1\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 15) # only include appearances above 15\n```\n\n## What author has had the most No. 1 appearances this year? last 2 years? 5 years? 10 years?\n\nI'll look at this year first.\n\nIt's Colleen Hoover with 14.\n\n```{r most-one-appearances-this-year}\nbestsellers |> # start with the data\n  filter(year > 2022,\n         rank == 1) |> # only include rows with a year over 2022 and a rank of 1\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 1) # only include appearances above 1\n```\n\nNow two years.\n\nIt's Colleen Hoover with 33.\n\n```{r most-one-appearances-two-years}\nbestsellers |> # start with the data\n  filter(year > 2021,\n         rank == 1) |> # only include rows with a year over 2021 and a rank of 1\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 2) # only include appearances above 2\n```\n\n5 years?\n\nFirst thing Colleen Hoover has not won. Delia Owens takes it with 44, most likely with Where the Crawdads Sing. Colleen Hoover comes in second with 33.\n\n```{r most-one-appearances-five-years}\nbestsellers |> # start with the data\n  filter(year > 2018,\n         rank == 1) |> # only include rows with a year over 2018 and a rank of 1\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 5) # only include rows with appearances above 5\n```\n\nAnd finally, 10 years?\n\nAlso Delia Owens with 44 for Where the Crawdads Sing, but closely followed by John Grisham at 40.\n\n```{r most-one-appearances-ten-years}\nbestsellers |> # start with the data\n  filter(year > 2013,\n         rank == 1) |> # only include rows with a year over 2013 and a rank of 1\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 10) # only include appearances above 10\n```\n\n## What authors have had the most books on the list?\n\nDanielle Steel has had the most with 68 books on the list. Christine Feehan comes in second with 54. Stuart Woods takes third with 44. \n\n```{r most-books}\nbestsellers |> # start with the data\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 21) # only include titles above 21\n```\n\n## What author has had the most books on the list in the last year? 2 years? 5 years? 10 years?\n\nI'll start with this year.\n\nIt's Colleen Hoover with 7.\n\n```{r most-books-this-year}\nbestsellers |> # start with the data\n  filter(year >2022) |> # only include rows with a year over 2022\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 1) # only include titles above 1\n```\n\nI'll look at two years.\n\nIt's Danielle Steel with 13 Colleen Hoover in a close second with 11.\n\n```{r most-books-two-years}\nbestsellers |> # start with the data\n  filter(year >2021) |> # only include rows with a year over 2021\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 3) # only include titles above 3\n```\n\nI'll look at the last 5 years.\n\nIt's Danielle Steel again with 34.\n\n```{r most-books-last-five}\nbestsellers |> # start with the data\n  filter(year > 2018) |> # only include rows with a year over 2018\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 9) # only include titles above 9\n```\n\nNow, I'll look at the last 10 years.\n\nIt's also Danielle Steel with 59.\n\n```{r most-ones-last-ten}\nbestsellers |> # start with the data\n  filter(year > 2013) |> # only include rows with a year over 2013\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 17) # only include titles above 17\n```\n\n\n## What books have been on the list for the most number of weeks?\n\nI'll use gsa again to find which books have been on the list for the most number of weeks.\n\nDelia Owens wins with 193 appearances for Where the Crawdads Sing. Gillian Flynn comes in second with 122 for Where the Crawdads Sing. Colleen Hoover is the only person with 2 books in the top 10 and takes third with 117.\n\n```{r most-weeks}\nbestsellers |> # start with the data\n  group_by(author, title) |> # group by author and title\n  summarize(appearances = n()) |> # count number of appearances\n  arrange(desc(appearances)) |> # arrange in descending order\n  filter(appearances > 67) |> # only include rows with appearances greater than 67\n  write_csv(\"data-processed/most-weeks.csv\") |> # save the data for data wrapper\n  print() # print it\n```\n\n## What books were No. 1 for the most number of weeks?\n\nI'll find which books were No. 1 for the most number of weeks by filtering first, and then using gsa.\n\nWhere the Crawdads Sing was number one for the most number of weeks by a good amount with 44. Fifty Shades of Grey by E. L. James is in second with 29.\n\n```{r most-weeks-one}\nbestsellers |> # start with the data\n  filter(rank == 1) |> # only include rows where the rank is 1\n  group_by(author, title) |> # group by author and title\n  summarize(appearances = n()) |> # count number of appearances\n  arrange(desc(appearances)) |> # arrange in descending order\n  filter(appearances > 6) |> # only include rows with appearances greater than 6\n  write_csv(\"data-processed/most-one-weeks.csv\") |> # save the data for data wrapepr\n  print() # print it\n```\n\nLet's see if the books returned to the charts after the move adaptations came out. \n\nFirst, I'll look at Where the Crawdads Sing. he book was published in 2018 and the movie was released in July 2022. It looks like it stayed on the list pretty consistently after it first gained traction in 2019, though there's a small dip in 2021, and then its sales faded in 2023 after the movie talk wore off. \n\n```{r where-the-crawdads-sing}\nbestsellers |> # start with the data\n  filter(str_detect(title, \"WHERE THE CRAWDADS SING\")) |> # only include Where the Crawdads Sing\n  group_by(year) |> # group by year\n  summarize(appearance = n()) # count the number of appearances in each year\n```\n\nNow, I'll look at Fifty Shades of Grey. The book was published in 2011 and the movie was released in 2015. It looks like it got most traction in 2012 and 2013 (when the book actually got a redistribution deal after a small initial publication) with a slight resurgence in 2015 with the movie release. \n\n```{r fifty-shades-of-grey}\nbestsellers |> # start with the data\n  filter(str_detect(title, \"FIFTY SHADES OF GREY\")) |> # only include Fifty Shades of Grey\n  group_by(year) |> # group by year\n  summarize(appearance = n()) # count the number of appearances in each year\n```\n\nFinally, I'll look at Gone Girl. The book was published in 2012 and the movie was released in 2014. It looks like it stayed on the list pretty consistently after publication, peaking in 2014 with the movie release and then dropping off in 2015. \n\n```{r gone-girl}\nbestsellers |> # start with the data\n  filter(str_detect(title, \"GONE GIRL\")) |> # only include Gone Girl\n  group_by(year) |> # group by year\n  summarize(appearance = n()) # count the number of appearances in each year\n```\n\n## What authors have had the most titles reach No. 1?\n\nI'll find which authors have had the most No. 1 titles.\n\nNora Roberts takes first on this one with 20 number one titles.\n\nThese authors were also top three for most appearances on the chart, just in a different order. \n\n```{r most-one-titles}\nbestsellers |> # start with the data\n  filter(rank == 1) |> # only include rows with a rank of 1\n  distinct(author, title) |> # only include distinct author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count number of titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 8) # only include rows with titles greater than 8\n```\n\n## What author has had the most No. 1 books in the last 2 years? 5 years? 10 years?\n\nI'll start with 2 years.\n\nColleen Hoover and John Sandford are tied for first with 4 No. 1 books.\n\n```{r most-one-titles-last-two}\nbestsellers |> # start with the data\n  filter(rank == 1, \n         year >2021) |> # only include rows with a rank of 1 and a year over 2021\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 1) # only include rows with titles above 1\n```\n\nI'll find which authors have had the most No. 1 books in the last 5 years.\n\nDavid Baldacci is first with 10 number one books.\n\n```{r most-one-titles-last-five}\nbestsellers |> # start with the data\n  filter(rank == 1, \n         year > 2018) |> # only include rows with a rank of 1 and a year over 2018\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 3) # only include rows with titles above 3\n```\n\nNow, I'll look at the last 10 years.\n\nNora Roberts is first with 17 and David Baldacci is second with 15. \n\n```{r most-one-titles-last-ten}\nbestsellers |> # start with the data\n  filter(rank == 1,\n         year > 2013) |> # only include rows with a rank of 1 and a year over 2013\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 7) # only include rows with titles above 7\n```\n","srcMarkdownNoYaml":"\n\n## Goals of the notebook\n\nHere's what I'll find in this notebook\n\n- I'll make a searchable table\n- What authors have had the most appearances on the list?\n- What author has had the most appearances this year? last 2 years? 5 years? 10 years?\n- What authors have had the most No. 1 appearances? \n- What author has had the most No. 1 appearances this year? last 2 years? 5 years? 10 years?\n- What authors have had the most books on the list?\n- What author has had the most books on the the list this year? last 2 years? 5 years? 10 years?\n- What books have been on the list for the most number of weeks?\n- What books were No. 1 for the most number of weeks?\n- How did movie adaptations affect the charts?\n- What authors have had the most No. 1 books? \n- What author has had the most No. 1 books in the last 5 years? 10 years?\n\n## Setup\n\nI'll load the necessary libraries. \n\n```{r setup}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(DT)\n```\n\n## Import\n\nI'll import the data into the notebook by saving the file into a new object\n\n```{r import}\nbestsellers <- read_rds(\"data-processed/bestsellers-combined.rds\") # saving the data into a new object\n\nglimpse(bestsellers) # glimpsing the data\n```\n\n## Making a searchable table\n\nI'll make a searchable table to look for certain authors and books.\n\n```{r search-table}\nbestsellers |> \n  datatable()\n```\n\n\n## What authors have had the most appearances on the list?\n\nI'll use gsa to find what authors have had the most appearances on the list.\n\nColleen Hoover blows everyone else out of the water with 415 total appearances. John Grisham comes in ssecond with 339, and David Baldacci comes in third with 240.\n\n```{r most-appearances}\nbestsellers_appearances <- bestsellers |> # saving the data into a new object\n  group_by(author) |> # group by author\n  summarize(total_appearances = n()) |> # count appearances\n  arrange(desc(total_appearances)) # arrange in descending order by total_appearances\n\nbestsellers_appearances |> # start with the data\n   filter(total_appearances > 145) |> # only include rows with total_appearances over 145\n  write_csv(\"data-processed/most-appearances.csv\") |> # save the data for data wrapper\n  print() # print it\n```\n\n## What author has had the most appearances this year? last 2 years? 5 years? 10 years?\n\nFirst, I'll find which authors have had the most appearances this year.\n\nAgain, Colleen Hoover blows everyone else out of the water with more than triple 2nd place. She has 160 appearances to be exact.\n\n```{r most-appearances-this-year}\nbestsellers |> # start with the data\n  filter(year > 2022) |> # only include rows with a year over 2022\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 14) # only include appearances above 14\n```\n\nI'll look at the past two years.\n\nColleen Hoover again. More than triple second place with 367.\n\n```{r most-appearances-two-year}\nbestsellers |> # start with the data\n  filter(year > 2021) |> # only include rows with a year over 2021\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 22) # only include appearances above 22\n```\n\nI'll look at the past five years.\n\nColleen Hoover again, still with a large lead, but somewhat less than in the previous ones. She has 394.\n\n```{r most-appearances-five-year}\nbestsellers |> # start with the data\n  filter(year > 2018) |> # only include rows with a year over 2018\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 55) # only include appearances above 55\n```\n\nI'll look at 10 years.\n\nThis is crazy to me that Colleen Hoover still has the lead despite only becoming popular a few years ago. Note that she only has 6 appearances 2013-2017 and still takes the lead. She has 401 total appearances at this point.\n\n```{r most-appearances-ten-year}\nbestsellers |> # start with the data\n  filter(year > 2013) |> # only include rows with a year over 2013\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 105) # only include appearances above 105\n```\n\n## What authors have had the most No. 1 appearances?\n\nIt's John Grisham with 47, though Delia Owens comes close with 44. Colleen Hoover takes third with 33.\n\n```{r most-one-appearances}\nbestsellers |> # start with the data\n  filter(rank == 1) |> # only include rows with a rank of 1\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 15) # only include appearances above 15\n```\n\n## What author has had the most No. 1 appearances this year? last 2 years? 5 years? 10 years?\n\nI'll look at this year first.\n\nIt's Colleen Hoover with 14.\n\n```{r most-one-appearances-this-year}\nbestsellers |> # start with the data\n  filter(year > 2022,\n         rank == 1) |> # only include rows with a year over 2022 and a rank of 1\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 1) # only include appearances above 1\n```\n\nNow two years.\n\nIt's Colleen Hoover with 33.\n\n```{r most-one-appearances-two-years}\nbestsellers |> # start with the data\n  filter(year > 2021,\n         rank == 1) |> # only include rows with a year over 2021 and a rank of 1\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 2) # only include appearances above 2\n```\n\n5 years?\n\nFirst thing Colleen Hoover has not won. Delia Owens takes it with 44, most likely with Where the Crawdads Sing. Colleen Hoover comes in second with 33.\n\n```{r most-one-appearances-five-years}\nbestsellers |> # start with the data\n  filter(year > 2018,\n         rank == 1) |> # only include rows with a year over 2018 and a rank of 1\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 5) # only include rows with appearances above 5\n```\n\nAnd finally, 10 years?\n\nAlso Delia Owens with 44 for Where the Crawdads Sing, but closely followed by John Grisham at 40.\n\n```{r most-one-appearances-ten-years}\nbestsellers |> # start with the data\n  filter(year > 2013,\n         rank == 1) |> # only include rows with a year over 2013 and a rank of 1\n  group_by(author) |> # group by author\n  summarize(appearances = n()) |> # count appearances per author\n  arrange(desc(appearances)) |> # arrange in descending order by appearances\n  filter(appearances > 10) # only include appearances above 10\n```\n\n## What authors have had the most books on the list?\n\nDanielle Steel has had the most with 68 books on the list. Christine Feehan comes in second with 54. Stuart Woods takes third with 44. \n\n```{r most-books}\nbestsellers |> # start with the data\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 21) # only include titles above 21\n```\n\n## What author has had the most books on the list in the last year? 2 years? 5 years? 10 years?\n\nI'll start with this year.\n\nIt's Colleen Hoover with 7.\n\n```{r most-books-this-year}\nbestsellers |> # start with the data\n  filter(year >2022) |> # only include rows with a year over 2022\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 1) # only include titles above 1\n```\n\nI'll look at two years.\n\nIt's Danielle Steel with 13 Colleen Hoover in a close second with 11.\n\n```{r most-books-two-years}\nbestsellers |> # start with the data\n  filter(year >2021) |> # only include rows with a year over 2021\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 3) # only include titles above 3\n```\n\nI'll look at the last 5 years.\n\nIt's Danielle Steel again with 34.\n\n```{r most-books-last-five}\nbestsellers |> # start with the data\n  filter(year > 2018) |> # only include rows with a year over 2018\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 9) # only include titles above 9\n```\n\nNow, I'll look at the last 10 years.\n\nIt's also Danielle Steel with 59.\n\n```{r most-ones-last-ten}\nbestsellers |> # start with the data\n  filter(year > 2013) |> # only include rows with a year over 2013\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 17) # only include titles above 17\n```\n\n\n## What books have been on the list for the most number of weeks?\n\nI'll use gsa again to find which books have been on the list for the most number of weeks.\n\nDelia Owens wins with 193 appearances for Where the Crawdads Sing. Gillian Flynn comes in second with 122 for Where the Crawdads Sing. Colleen Hoover is the only person with 2 books in the top 10 and takes third with 117.\n\n```{r most-weeks}\nbestsellers |> # start with the data\n  group_by(author, title) |> # group by author and title\n  summarize(appearances = n()) |> # count number of appearances\n  arrange(desc(appearances)) |> # arrange in descending order\n  filter(appearances > 67) |> # only include rows with appearances greater than 67\n  write_csv(\"data-processed/most-weeks.csv\") |> # save the data for data wrapper\n  print() # print it\n```\n\n## What books were No. 1 for the most number of weeks?\n\nI'll find which books were No. 1 for the most number of weeks by filtering first, and then using gsa.\n\nWhere the Crawdads Sing was number one for the most number of weeks by a good amount with 44. Fifty Shades of Grey by E. L. James is in second with 29.\n\n```{r most-weeks-one}\nbestsellers |> # start with the data\n  filter(rank == 1) |> # only include rows where the rank is 1\n  group_by(author, title) |> # group by author and title\n  summarize(appearances = n()) |> # count number of appearances\n  arrange(desc(appearances)) |> # arrange in descending order\n  filter(appearances > 6) |> # only include rows with appearances greater than 6\n  write_csv(\"data-processed/most-one-weeks.csv\") |> # save the data for data wrapepr\n  print() # print it\n```\n\nLet's see if the books returned to the charts after the move adaptations came out. \n\nFirst, I'll look at Where the Crawdads Sing. he book was published in 2018 and the movie was released in July 2022. It looks like it stayed on the list pretty consistently after it first gained traction in 2019, though there's a small dip in 2021, and then its sales faded in 2023 after the movie talk wore off. \n\n```{r where-the-crawdads-sing}\nbestsellers |> # start with the data\n  filter(str_detect(title, \"WHERE THE CRAWDADS SING\")) |> # only include Where the Crawdads Sing\n  group_by(year) |> # group by year\n  summarize(appearance = n()) # count the number of appearances in each year\n```\n\nNow, I'll look at Fifty Shades of Grey. The book was published in 2011 and the movie was released in 2015. It looks like it got most traction in 2012 and 2013 (when the book actually got a redistribution deal after a small initial publication) with a slight resurgence in 2015 with the movie release. \n\n```{r fifty-shades-of-grey}\nbestsellers |> # start with the data\n  filter(str_detect(title, \"FIFTY SHADES OF GREY\")) |> # only include Fifty Shades of Grey\n  group_by(year) |> # group by year\n  summarize(appearance = n()) # count the number of appearances in each year\n```\n\nFinally, I'll look at Gone Girl. The book was published in 2012 and the movie was released in 2014. It looks like it stayed on the list pretty consistently after publication, peaking in 2014 with the movie release and then dropping off in 2015. \n\n```{r gone-girl}\nbestsellers |> # start with the data\n  filter(str_detect(title, \"GONE GIRL\")) |> # only include Gone Girl\n  group_by(year) |> # group by year\n  summarize(appearance = n()) # count the number of appearances in each year\n```\n\n## What authors have had the most titles reach No. 1?\n\nI'll find which authors have had the most No. 1 titles.\n\nNora Roberts takes first on this one with 20 number one titles.\n\nThese authors were also top three for most appearances on the chart, just in a different order. \n\n```{r most-one-titles}\nbestsellers |> # start with the data\n  filter(rank == 1) |> # only include rows with a rank of 1\n  distinct(author, title) |> # only include distinct author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count number of titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 8) # only include rows with titles greater than 8\n```\n\n## What author has had the most No. 1 books in the last 2 years? 5 years? 10 years?\n\nI'll start with 2 years.\n\nColleen Hoover and John Sandford are tied for first with 4 No. 1 books.\n\n```{r most-one-titles-last-two}\nbestsellers |> # start with the data\n  filter(rank == 1, \n         year >2021) |> # only include rows with a rank of 1 and a year over 2021\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 1) # only include rows with titles above 1\n```\n\nI'll find which authors have had the most No. 1 books in the last 5 years.\n\nDavid Baldacci is first with 10 number one books.\n\n```{r most-one-titles-last-five}\nbestsellers |> # start with the data\n  filter(rank == 1, \n         year > 2018) |> # only include rows with a rank of 1 and a year over 2018\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 3) # only include rows with titles above 3\n```\n\nNow, I'll look at the last 10 years.\n\nNora Roberts is first with 17 and David Baldacci is second with 15. \n\n```{r most-one-titles-last-ten}\nbestsellers |> # start with the data\n  filter(rank == 1,\n         year > 2013) |> # only include rows with a rank of 1 and a year over 2013\n  distinct(author, title) |> # only include unique author/title combinations\n  group_by(author) |> # group by author\n  summarize(titles = n()) |> # count titles per author\n  arrange(desc(titles)) |> # arrange in descending order by titles\n  filter(titles > 7) # only include rows with titles above 7\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"03-analysis.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","theme":"cosmo","title":"Combined Print and E-Book Fiction Analysis"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}